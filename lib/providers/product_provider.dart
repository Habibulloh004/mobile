import 'package:flutter/material.dart';
import 'package:dio/dio.dart';
import '../models/product_model.dart';

class ProductProvider with ChangeNotifier {
  final String posterApiToken;
  List<ProductModel> _products = [];
  bool isLoading = false;

  List<ProductModel> get products => _products;

  ProductProvider(this.posterApiToken);
  Future<void> loadProducts(int categoryId) async {
    isLoading = true;
    notifyListeners();

    final url = "https://joinposter.com/api/menu.getProducts?token=$posterApiToken";

    try {
      final response = await Dio().get(url);

      // ‚úÖ –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–π JSON –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
      debugPrint("üì• –ü–æ–ª—É—á–µ–Ω JSON –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${response.data}");

      if (response.statusCode == 200 && response.data['response'] is List) {
        _products = (response.data['response'] as List)
            .where((item) => int.tryParse(item['menu_category_id'].toString()) == categoryId)
            .map((item) {
          // ‚úÖ –í—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º
          debugPrint("üîç –ü–∞—Ä—Å–∏–º –ø—Ä–æ–¥—É–∫—Ç: $item");
          return ProductModel.fromJson(item);
        })
            .toList();
      } else {
        _products = [];
        debugPrint("‚ö†Ô∏è –ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö");
      }
    } catch (e) {
      debugPrint("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: $e");
      _products = [];
    }

    isLoading = false;
    notifyListeners();
  }


}
